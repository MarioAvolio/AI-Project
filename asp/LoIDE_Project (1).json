{"language":"asp","engine":"dlv2","executor":"pythonEse","runAuto":"on","tabname":["L P 1"],"program":["% band and members\r\n\r\nsinger(james_brown). \r\nband(jbs).\r\nmusician(maceo_parker).\r\nmember_of(james_brown,jbs).\r\nmember_of(fred_wesley,jbs).\r\nmember_of(maceo_parker,jbs).\r\nmember_of(bootsy_collins,jbs).\r\nmember_of(bobby_bird,jbs).\r\n\r\n% singer\r\n\r\nsinger(anderson_paak).\r\nmusician(anderson_paak).\r\n\r\n% songs - albums\r\nmusic_work(the_grunt).\r\nmusic_work(escapeism).\r\n\r\n% artists of songs\r\nartist_of(jbs,the_grunt).\r\nartist_of(jbs,escapeism).\r\n\r\nartist_of(anderson_paak,milk_n_honey).\r\nartist_of(anderson_paak,tints).\r\n\r\n% genres\r\n% genre(black_music).\r\n% genre(funk).\r\n% genre(jazz_funk).\r\n% genre(raw_funk).\r\n% genre(rap).\r\n% genre(trap).\r\n\r\n% subgenres\r\nsubgenre(funk,black_music).\r\nsubgenre(rap,black_music).\r\nsubgenre(raw_funk,funk).\r\nsubgenre(jazz_funk,funk).\r\nsubgenre(trap,rap).\r\n\r\n% music works and genre\r\nmusic_genre(the_grunt,raw_funk).\r\nmusic_genre(escapeism,jazz_funk).\r\nmusic_genre(milk_n_honey,trap).\r\nmusic_genre(tints,funk).\r\nmusic_genre(tints,rap).\r\n\r\n\r\n% band and members from member_of\r\nmusic_work(X) :- artist_of(_,X).\r\n\r\n% infer genre(X) from relations  \r\ngenre(X) :- subgenre(X,_). % X is a genre if it is (subgenre of something or the supergenre of something)\r\ngenre(X) :- subgenre(_,X).\r\ngenre(X) :- music_genre(_,X). % X is a genre if it is the music genre of something\r\n\r\n\r\n\r\n\r\n% inheritance with unary predicates  \r\n\r\n% if X is a singer X is a musician and an artist\r\nartist(X) :- singer(X).\r\nmusician(X) :- singer(X).\r\n\r\n% X is an artist if X is a singer or a musician or a band\r\nartist(X) :- musician(X).\r\nartist(X) :- singer(X).\r\nartist(X) :- band(X).\r\n\r\n\r\n% transitive subgenre  \r\ntransitive_subgenre(X,Y) :- subgenre(X,Y).\r\ntransitive_subgenre(X,Y) :- transitive_subgenre(X,Z), subgenre(Z,Y). % the same  :- transitive_subgenre(X,Z), transitive_subgenre(Z,Y).\r\ntransitive_subgenre(X,X) :- genre(X). \r\n\r\n\r\n\r\n% inverse relations\r\nrecorded_by(X,Y) :- artist_of(Y,X).\r\n\r\n% infer artistsâ€™ genre\r\nplay_genre(X,Y) :- artist_of(X,Z1), music_genre(Z1,Z2), transitive_subgenre(Z2,Y).\r\n\r\n\r\n% 1----------------------------\r\n% Add two more branches to the subgenre taxonomy using at least:\r\n% o One high-level genre of choice (same level as black music)\r\n% o Two middle-level genre of choice (subgenre of the previous genre)\r\n% o Four low-level genre of choice (subgenres of the previous genres)\r\n\r\ngenre(1).\r\nm_subgenre(2,1).\r\nm_subgenre(3,1).\r\nl_subgenre(4,2).\r\nl_subgenre(5,2).\r\nl_subgenre(6,3).\r\nl_subgenre(7,3).\r\n\r\n\r\n% or \r\ngenre(1..5)\r\nm_subgenre(X,Y) :- genre(X,Z), genre(Z,Y).\r\nl_subgenre(X,Y) :- m_subgenre(X,Z), m_subgenre(Z,Y).\r\n\r\n\r\n% Add artists and music works in such a way that each low-level subgenre is associated at least at one music work.\r\nartist(1..5).\r\nmusic_work(1..5).\r\n\r\nisAssociate(X,Y) | isNotAssociated(X,Y) :- l_subgenre(X, _), music_work(Y), X<Y. %X<Y to optimize\r\n%each low-level subgenre is associated at least at one music work.\r\nassociated_l_sub(X) :- isAssociated(X, _). % safety\r\n:- l_subgenre(X, _), not associated_l_sub(X).\r\n\r\nmusic_work_associated_to_genres(Y) :- isAssociated(_, Y).\r\nartist_of_work_associated_to_genres(X,Y) | noArtist_of(X,Y) :- artist(X), music_work_associated(Y). % guess\r\n\r\n%check\r\n:- artist(X), #count{Y,X: artist_of_work_associated_to_genres(X,Y)} < 1.\r\n\r\n% in the same way\r\nartist_with_wag(X) :- artist_of_work_associated_to_genres(X,_).\r\n:- artist(X), not artist_with_wag(X).\r\n\r\n\r\nAdd at least one rule using the datalog subset of ASP plus, if needed, true\r\nnegation (but no disjunction, no NOT), which has the (abstract) form:\r\no (p(X) and q(X)) if Z(X), where p and q are predicates of arbitrary\r\nariety, X is an arbitrary list of variables, and Z(X) is any\r\nconjunction of literals that uses the variables of the list X."],"output_model":"","output_error":"","tab":[""]}