{"language":"asp","engine":"dlv2","executor":"embAspServerExecutor","option":[{"name":"free choice","value":["--no-facts"]}],"runAuto":"on","tabname":["L P 1"],"program":["% band and members\r\n\r\nsinger(james_brown). \r\nband(jbs).\r\nmusician(maceo_parker).\r\nmember_of(james_brown,jbs).\r\nmember_of(fred_wesley,jbs).\r\nmember_of(maceo_parker,jbs).\r\nmember_of(bootsy_collins,jbs).\r\nmember_of(bobby_bird,jbs).\r\n\r\n% singer\r\n\r\nsinger(anderson_paak).\r\nmusician(anderson_paak).\r\n\r\n% songs - albums\r\nmusic_work(the_grunt).\r\nmusic_work(escapeism).\r\n\r\n% artists of songs\r\nartist_of(jbs,the_grunt).\r\nartist_of(jbs,escapeism).\r\n\r\nartist_of(anderson_paak,milk_n_honey).\r\nartist_of(anderson_paak,tints).\r\n\r\n% genres\r\n% genre(black_music).\r\n% genre(funk).\r\n% genre(jazz_funk).\r\n% genre(raw_funk).\r\n% genre(rap).\r\n% genre(trap).\r\n\r\n% subgenres\r\nsubgenre(funk,black_music).\r\nsubgenre(rap,black_music).\r\nsubgenre(raw_funk,funk).\r\nsubgenre(jazz_funk,funk).\r\nsubgenre(trap,rap).\r\n\r\n% music works and genre\r\nmusic_genre(the_grunt,raw_funk).\r\nmusic_genre(escapeism,jazz_funk).\r\nmusic_genre(milk_n_honey,trap).\r\nmusic_genre(tints,funk).\r\nmusic_genre(tints,rap).\r\n\r\n\r\n% band and members from member_of\r\nmusic_work(X) :- artist_of(_,X).\r\n\r\n% infer genre(X) from relations  \r\ngenre(X) :- subgenre(X,_). % X is a genre if it is (subgenre of something or the supergenre of something)\r\ngenre(X) :- subgenre(_,X).\r\ngenre(X) :- music_genre(_,X). % X is a genre if it is the music genre of something\r\n\r\n\r\n\r\n\r\n% inheritance with unary predicates  \r\n\r\n% if X is a singer X is a musician and an artist\r\nartist(X) :- singer(X).\r\nmusician(X) :- singer(X).\r\n\r\n% X is an artist if X is a singer or a musician or a band\r\nartist(X) :- musician(X).\r\nartist(X) :- singer(X).\r\nartist(X) :- band(X).\r\n\r\n\r\n% transitive subgenre  \r\ntransitive_subgenre(X,Y) :- subgenre(X,Y).\r\ntransitive_subgenre(X,Y) :- transitive_subgenre(X,Z), subgenre(Z,Y). % the same  :- transitive_subgenre(X,Z), transitive_subgenre(Z,Y).\r\ntransitive_subgenre(X,X) :- genre(X). \r\n\r\n\r\n\r\n% inverse relations\r\nrecorded_by(X,Y) :- artist_of(Y,X).\r\n\r\n% infer artistsâ€™ genre\r\nplay_genre(X,Y) :- artist_of(X,Z1), music_genre(Z1,Z2), transitive_subgenre(Z2,Y).\r\n\r\n\r\n% 1----------------------------\r\n"],"output_model":"ANSWER\nrecorded_by(the_grunt,jbs). recorded_by(escapeism,jbs). recorded_by(milk_n_honey,anderson_paak). recorded_by(tints,anderson_paak). genre(raw_funk). genre(jazz_funk). genre(trap). genre(funk). genre(rap). genre(black_music). transitive_subgenre(raw_funk,raw_funk). transitive_subgenre(jazz_funk,jazz_funk). transitive_subgenre(trap,trap). transitive_subgenre(funk,funk). transitive_subgenre(rap,rap). transitive_subgenre(black_music,black_music). transitive_subgenre(funk,black_music). transitive_subgenre(rap,black_music). transitive_subgenre(raw_funk,funk). transitive_subgenre(jazz_funk,funk). transitive_subgenre(trap,rap). transitive_subgenre(raw_funk,black_music). transitive_subgenre(jazz_funk,black_music). transitive_subgenre(trap,black_music). play_genre(jbs,black_music). play_genre(jbs,funk). play_genre(jbs,raw_funk). play_genre(jbs,jazz_funk). play_genre(anderson_paak,rap). play_genre(anderson_paak,black_music). play_genre(anderson_paak,trap). play_genre(anderson_paak,funk). musician(james_brown). artist(jbs). artist(james_brown). artist(anderson_paak). artist(maceo_parker). music_work(milk_n_honey). music_work(tints).\n","output_error":"","tab":[""]}